name: ci

on: [push, pull_request]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        go: ["^1.17.0"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    name: Go ${{ matrix.go }} in ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.42

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

      - name: Lint
        run: make lint

      - name: Format
        run: |
          make format-check

      - name: Test
        run: |
          make test
          go mod tidy
          git checkout ./

      - name: Build
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --skip-publish --skip-validate

  release:
    name: Release to Github
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/dvm'
    needs: [ci]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: axetroy/setup-whatchanged@v1
        with:
            version: v0.3.4

      - name: Generate changelog
        run: |
          whatchanged --tpl=release.tpl --output=release.md
          cat release.md

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.17.0"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --release-notes=./release.md --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Prepare publish
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          cp README.md ./npm/README.md
          cp release.md ./npm/CHANGELOG.md
          cp LICENSE ./npm/LICENSE
          node ./npm/scripts/bump.js

      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          package: ./npm/package.json
          token: ${{ secrets.NPM_TOKEN }}
